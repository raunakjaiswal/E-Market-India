/*

 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_CS261;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nishant Singh
 */
public class Productcart extends javax.swing.JFrame {

    DefaultTableModel model;
    Connection con;

    /**
     * Creates new form Category
     */  
      Cart obj=new Cart();
    public Productcart() {
        initComponents();
        setExtendedState(Productcart.MAXIMIZED_BOTH);
        model = (DefaultTableModel) tblCartItems.getModel();
        con = DatabaseConnection.getConnection();
        tblCartItems.removeColumn(tblCartItems.getColumnModel().getColumn(0));
       
        
     obj.table_update(model,tblCartItems);
        
        lblTotal.setText(Integer.toString(obj.getTotalValue()));
        User userobj = new User(User.getNameOfUser());
        txtHomeAddress.setText("" + userobj.getHomeAddress() + ", " + userobj.getCity() + ", " + userobj.getState() + "\n PinCode" + userobj.getPincode() + "");
        txtOfficeAddress.setText("" + userobj.getOfficeAddress() + ", " + userobj.getCity() + ", " + userobj.getState() + "\n PinCode" + userobj.getPincode() + "");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCartItems = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtpincode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        txtCIty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        chckboxHomeAddres = new javax.swing.JCheckBox();
        chckboxOfficeAddress = new javax.swing.JCheckBox();
        chckBoxCustomAddress = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtHomeAddress = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtOfficeAddress = new javax.swing.JTextArea();
        lblTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setText("Cart");

        tblCartItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product Name", "Price", "Qty", "Total", "Seller"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCartItems);

        jButton2.setText("Delete Product");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel15.setText("Total");

        jButton3.setText("Place Order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtComments.setColumns(20);
        txtComments.setRows(5);
        jScrollPane2.setViewportView(txtComments);

        jLabel3.setText("Comments regarding Order");

        txtAddress.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtAddressPropertyChange(evt);
            }
        });

        jLabel2.setText("Address");

        jLabel4.setText("state");

        jLabel5.setText("City");

        jLabel6.setText("Pincode");

        chckboxHomeAddres.setText("Delever to Home Address");
        chckboxHomeAddres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckboxHomeAddresActionPerformed(evt);
            }
        });

        chckboxOfficeAddress.setText("Deliver to Office Address");
        chckboxOfficeAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckboxOfficeAddressActionPerformed(evt);
            }
        });

        chckBoxCustomAddress.setText("Deliver to another Address");

        txtHomeAddress.setColumns(20);
        txtHomeAddress.setRows(5);
        txtHomeAddress.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtHomeAddressPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(txtHomeAddress);

        txtOfficeAddress.setColumns(20);
        txtOfficeAddress.setRows(5);
        txtOfficeAddress.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtOfficeAddressPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(txtOfficeAddress);

        lblTotal.setText("-----");
        lblTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblTotalPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(txtCIty))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtpincode, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtState, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(chckBoxCustomAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(50, 50, 50))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chckboxHomeAddres))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chckboxOfficeAddress))))
                        .addGap(215, 215, 215))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel15)
                        .addGap(36, 36, 36)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel8)
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chckBoxCustomAddress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCIty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtpincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(chckboxHomeAddres)
                                    .addComponent(chckboxOfficeAddress))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel15)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        setSize(new java.awt.Dimension(1401, 789));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 
//    public void table_update() {
//
//        try {
//            Statement stmt = con.createStatement();
//            ResultSet rs = stmt.executeQuery("SELECT * FROM Cart Where Username = \"" + User.getNameOfUser() + "\";");
//            while (rs.next()) {
//                int id = rs.getInt("id");
//                String productName = rs.getString("ProductName");
//                int price = rs.getInt("Price");
//                int quantity = rs.getInt("Quantity");
//                String seller = rs.getString("ShopUsername");
//                int total = quantity * price;
//                TotalValue+=total;
//                model.insertRow(tblCartItems.getRowCount(), new Object[]{
//                    id,
//                    productName,
//                    price,
//                    quantity,
//                    total,
//                    seller
//                });
//            }
//            stmt.close();
//        } catch (HeadlessException | SQLException ex) {
//            Logger.getLogger(Search_Results.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:

            Connection con = DatabaseConnection.getConnection();
            Statement stmt = con.createStatement();
            String query = "SELECT  orderPlaced From user Where Username = \"" + User.getNameOfUser() + "\";";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            if (rs.getBoolean("orderPlaced") == true) {
                JOptionPane.showMessageDialog(this, "First your existing order need to be completed");
            } else {
                boolean flag;
                flag=obj.addItemCart(model, tblCartItems, chckBoxCustomAddress, chckboxHomeAddres, chckboxOfficeAddress, txtAddress, txtAddress, txtState, txtCIty, txtpincode);
                if(flag)
                    JOptionPane.showMessageDialog(Productcart.this, "Order Placed Successfully");
                Statement stmt3 = con.createStatement();
                String queryDelete = "Delete from Cart where Username in (\"" + User.getNameOfUser() + "\");";
                stmt3.executeUpdate(queryDelete);
                stmt3.close();
                String query2 = "Update user SET orderPlaced = '1' Where Username = \"" + User.getNameOfUser() + "\";";
                Statement stmt2 = con.createStatement();
                stmt2.executeUpdate(query2);

            }
        } catch (SQLException ex) {
            Logger.getLogger(Productcart.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean flag;
        flag=obj.deleteItem(model, tblCartItems);
        if(flag)
          JOptionPane.showMessageDialog(this, "Record Deleted");
        lblTotal.setText(Integer.toString(obj.getTotalValue()));
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new user_ui().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    User usrobj = new User(User.getNameOfUser());
    private void txtAddressPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtAddressPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAddressPropertyChange

    private void chckboxHomeAddresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckboxHomeAddresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckboxHomeAddresActionPerformed

    private void chckboxOfficeAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckboxOfficeAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckboxOfficeAddressActionPerformed

    private void txtHomeAddressPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtHomeAddressPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_txtHomeAddressPropertyChange

    private void txtOfficeAddressPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtOfficeAddressPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOfficeAddressPropertyChange

    private void lblTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblTotalPropertyChange
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_lblTotalPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productcart().setVisible(true);
            }
        });
    }

//    private void addItemCart() {
//
//        int numberOfRows = tblCartItems.getRowCount();
//
//        if (numberOfRows == 0) {
//            JOptionPane.showMessageDialog(Productcart.this, "No Items in Cart");
//        } else {
//
//            for (int i = 0; i < numberOfRows; i++) {
//
//                String UserUsername = User.getNameOfUser();
//                String productName = (String)tblCartItems.getValueAt(i, 0);
//                int price = (int) tblCartItems.getValueAt(i, 1);
//                int quantity = (int) tblCartItems.getValueAt(i, 2);
//                String seller = (String) tblCartItems.getValueAt(i, 4);
//                String comments = txtComments.getText();
//                User user = new User(User.getNameOfUser());
//                String address = " ";
//                String state = " ";
//                String city = " ";
//                int pincode = 0;
//                
//                    address = user.getHomeAddress();
//                    state = user.getState();
//                    city = user.getCity();
//                    pincode = user.getPincode();
//                if (chckboxHomeAddres.isSelected()) {
//                    address = user.getHomeAddress();
//                    state = user.getState();
//                    city = user.getCity();
//                    pincode = user.getPincode();
//                } else if (chckBoxCustomAddress.isSelected()) {
//                    address = user.getOfficeAddress();
//                    state = user.getState();
//                    city = user.getCity();
//                    pincode = user.getPincode();
//
//                } else if (chckBoxCustomAddress.isSelected()) {
//                    address = txtAddress.getText();
//                    state = txtState.getText();
//                    city = txtCIty.getText();
//                    pincode = Integer.parseInt(txtpincode.getText());
//                }
//
//                String queryAddOrder = "INSERT INTO orders(UserUsername,Shopusername,productname,Price,Quantity,Comments,Address,State,City,Pincode) VALUES("
//                        + "\"" + UserUsername + "\","
//                        + "\"" + seller + "\","
//                        + "\"" + productName + "\","
//                        + "\"" + price + "\","
//                        + "\"" + quantity + "\","
//                        + "\"" + comments + "\","
//                        + "\"" + address + "\","
//                        + "\"" + state + "\","
//                        + "\"" + city + "\","
//                        + "\"" + pincode + "\""
//                        + ");";
//
//                try {
//                    Statement stmt = con.createStatement();
//                    stmt.executeUpdate(queryAddOrder);
//                    stmt.close();
//
//                } catch (SQLException ex) {
//                    Logger.getLogger(Productcart.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//            JOptionPane.showMessageDialog(Productcart.this, "Order Placed Successfully");
//        }
//    }

//    public void deleteItem() {
//
//        int selectedIndex = tblCartItems.getSelectedRow();
//
//        try {
//            int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
//
//            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to Delete the Item", "Warning", JOptionPane.YES_NO_OPTION);
//
//            if (dialogResult == JOptionPane.YES_OPTION) {
//                Statement stmt = con.createStatement();
//                String queryDelete = "Delete from Cart where id=" + id + ";";
//                stmt.executeUpdate(queryDelete);
//                stmt.close();
//                model.removeRow(tblCartItems.getSelectedRow());
//                JOptionPane.showMessageDialog(this, "Record Deleted");
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(Productcart.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chckBoxCustomAddress;
    private javax.swing.JCheckBox chckboxHomeAddres;
    private javax.swing.JCheckBox chckboxOfficeAddress;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblCartItems;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCIty;
    private javax.swing.JTextArea txtComments;
    private javax.swing.JTextArea txtHomeAddress;
    private javax.swing.JTextArea txtOfficeAddress;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtpincode;
    // End of variables declaration//GEN-END:variables
}
